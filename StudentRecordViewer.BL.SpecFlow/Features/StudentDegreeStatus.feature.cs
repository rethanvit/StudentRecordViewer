// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace StudentRecordViewer.BL.SpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class StudentDegreeStatusFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "StudentDegreeStatus.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "StudentDegreeStatus", "\tAs a Student Record Administrator, when searching a Student ID, I want to see st" +
                    "udent’s degree status so that I know if the student is Awarded a degree / awarde" +
                    "d an Extended degree / Disqualified.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "StudentDegreeStatus")))
            {
                global::StudentRecordViewer.BL.SpecFlow.Features.StudentDegreeStatusFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudentID",
                        "FirstName",
                        "LastName",
                        "FirstYearCredits",
                        "SecondYearCredits",
                        "ThirdYearCredits",
                        "FourthYearCredits",
                        "FifthYearCredits"});
            table1.AddRow(new string[] {
                        "134567",
                        "John",
                        "Stacks",
                        "30",
                        "40",
                        "40",
                        "10",
                        "40"});
            table1.AddRow(new string[] {
                        "145645",
                        "Jack",
                        "Wright",
                        "40",
                        "30",
                        "40",
                        "10",
                        "40"});
            table1.AddRow(new string[] {
                        "232334",
                        "Josh",
                        "Monty",
                        "20",
                        "40",
                        "0",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "234234",
                        "Jermey",
                        "Clark",
                        "40",
                        "40",
                        "40",
                        "40",
                        ""});
            table1.AddRow(new string[] {
                        "456456",
                        "Mike",
                        "Stacy",
                        "30",
                        "30",
                        "0",
                        "",
                        ""});
            table1.AddRow(new string[] {
                        "345345",
                        "Kelly",
                        "Caster",
                        "40",
                        "0",
                        "30",
                        "40",
                        ""});
            table1.AddRow(new string[] {
                        "345348",
                        "Stella",
                        "Caster",
                        "40",
                        "0",
                        "30",
                        "40",
                        "40"});
#line 5
testRunner.Given("Following is the list of student data available", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted(string studentID, string degreeStatus, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("StudentID", studentID);
            argumentsOfScenario.Add("DegreeStatus", degreeStatus);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Student\'s degree status is determined based on the credits completed", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 17
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 18
testRunner.Given(string.Format("user provides Student ID {0}", studentID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 19
testRunner.When("user search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
testRunner.Then(string.Format("student\'s status is determined to be {0}", degreeStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 134567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "134567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "134567")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Extended")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_134567()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("134567", "Extended", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 145645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "145645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "145645")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Extended")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_145645()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("145645", "Extended", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 232334")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "232334")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "232334")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Disqualified")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_232334()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("232334", "Disqualified", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 234234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "234234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "234234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Awarded")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_234234()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("234234", "Awarded", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 456456")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "456456")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "456456")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Disqualified")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_456456()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("456456", "Disqualified", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 345345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "345345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "345345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Disqualified")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_345345()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("345345", "Disqualified", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Student\'s degree status is determined based on the credits completed: 345348")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StudentDegreeStatus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "345348")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentID", "345348")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DegreeStatus", "Disqualified")]
        public virtual void StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted_345348()
        {
#line 17
this.StudentsDegreeStatusIsDeterminedBasedOnTheCreditsCompleted("345348", "Disqualified", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
